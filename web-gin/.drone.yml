kind: pipeline
type: docker
name: default

clone:
  disable: true

steps:
  - name: clone
    pull: if-not-exists
    image: appleboy/drone-ssh
    settings:
      host: 10.4.7.100
      username: root
      password: 123456
      port: 22
      script:
        - cd /drone/src
        - echo ssh://git@10.4.7.100:10022/jettjia/go-micro-frame-web-test.git
        - git clone ssh://git@10.4.7.100:10022/jettjia/go-micro-frame-web-test.git
        - cd go-micro-frame-web-test
        - git checkout master
        - chmod -R 777 ./*
  
  - name: build-image
    pull: if-not-exists
    image: appleboy/drone-ssh
    settings:
      host: 10.4.7.100
      username: root
      password: 123456
      port: 22
      script:
        - cd /drone/src/go-micro-frame-web-test
        - docker build -t my-go-micro-web .
        - docker tag my-go-micro-web 10.4.7.100:85/test/my-go-micro-web:latest
        - docker login -u admin -p Harbor12345 10.4.7.100:85
        - docker push 10.4.7.100:85/test/my-go-micro-web:latest
        - docker rmi my-go-micro-web
        - docker rmi 10.4.7.100:85/test/my-go-micro-web:latest

  - name: deploy-container
    pull: if-not-exists
    image: appleboy/drone-ssh
    settings:
      host: 10.4.7.102
      username: root
      password: 123456
      port: 22
      script:
        - docker login -u admin -p Harbor12345 10.4.7.100:85
        - docker pull 10.4.7.100:85/test/my-go-micro-web:latest
        - list=$(docker ps -a| grep web-gin | awk '{print $1}')
        - test "$list" = "" && echo "none my-go-micro-web containers running" || docker stop $list
        - docker rm $list
        - docker run -p 8021:8021 -d -v /data/my-go-micro-web:/apps/logs 10.4.7.100:85/test/my-go-micro-web:latest

trigger:
  branch:
    - master
  event:
    - push

volumes:
  - name: sshkeys
    host:
      path: /root/.ssh

  - name: dockerdaemon
    host:
      path: /etc/docker/daemon.json